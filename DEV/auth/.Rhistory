source('~/Documents/r-projects/facebook/rfacebook/oauth/fb_token.R')
fb.auth()
fb.data <- function(params, req_auth = FALSE) {
if(req_auth = TRUE){
auth <- fb.auth()
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
fb.auth <- function(){
browseURL('https://developers.facebook.com/tools/explorer/')
token <- readline("What is your token? ")
user <- readline("What is your user name or id? ")
return(c(user, token))
}
dir("..")
for(i in dir("..")){
source(i)
}
for(i in dir("..")){
print(i)
}
fb.auth <- function(){
browseURL('https://developers.facebook.com/tools/explorer/')
token <- readline("What is your token? ")
user <- readline("What is your user name or id? ")
return(c(user, token))
}
source('~/.active-rstudio-document', echo=TRUE)
source("../fb_api.R")
source("../fb_matrix.R")
# source("../fb_params.R")
source("../fb_auth.R")
source("../fb_api.R")
source("../fb_matrix.R")
source("../fb_params.R")
source("../fb_auth.R")
source("../fb_api.R")
source("../fb_matrix.R")
source("../fb_params.R")
source("fb_auth.R")
fb.data <- function(params, req_auth = FALSE) {
if(req_auth = TRUE){
auth <- fb.auth()
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
fb.data <- function(pars, req_auth = FALSE) {
if(req_auth = TRUE){
auth <- fb.auth()
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
auth <- fb.auth()
fb.data <- function(params, req_auth = FALSE) {
if(req_auth = TRUE){
auth <- fb.auth()
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
fb.data <- function(params, req_auth = TRUE) {
if(req_auth = TRUE){
auth <- fb.auth()
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
param_list <- c(metric="page_impressions_by_age_gender_unique",since="2016-06-1", until="2016-06-30", period="day")
fb.data <- function(params, req_auth = FALSE) {
if(req_auth = TRUE){
auth <- fb.auth()
token <- auth[2]
params <- params(params)
}
fb.data <- function(params = param_list, req_auth = FALSE) {
if(req_auth = TRUE){
auth <- fb.auth()
token <- auth[2]
params <- params(params)
}
fb.data <- function(params, req_auth = FALSE) {
if(req_auth = TRUE){
auth <- fb.auth()
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
auth
fb.auth <- function(){
browseURL('https://developers.facebook.com/tools/explorer/')
token <- readline("What is your token? ")
user <- readline("What is your user name or id? ")
return(c(user, token))
}
if(req_auth = TRUE){
auth <- fb.auth()
auth
source('~/.active-rstudio-document')
y <- 2
cat('y=',y)
cat("\nEnter username")
x <- scan(what=character(),nmax=1,quiet=TRUE)
y <- 2*2
cat('y=',y)
cat('\nx=',x)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
cat("\n Enter Username")
x <- scan(what(character(),nmax=1,quiet=TRUE)
)
cat("\n Enter Username")
x <- scan(what=character(),nmax=1,quiet=TRUE)
x
test <- function(){}
cat("\n Enter Username")
x <- scan(what=character(),nmax=1,quiet=TRUE)
test <- function(){}
readline("\n Enter Username")
}
function
.
test
test <- function(){
cat("\n Enter Username")
x <- scan(what=character(),nmax=1,quiet=TRUE)
}
test()
test <- function(){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
browseURL('https://developers.facebook.com/tools/explorer/')
cat("\n Enter Token")
}
test()
EAACEdEose0cBAM1luKCSfAbZAUkGscZA9A6lyDbikZBZCZBtFLGBr73U12XZBomNNPCwNUvNXqqoWpmSZCj3CZBZBtJ6D9BEWHlwRQ4P3DW2mDFFaSCZAZBz3JJtmrvvQLwEasw0bZCQrlK1yM4QmNSM1d7YinYZCzI1a4pJy10RZAX6jeOgZDZD
test <- function(){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
browseURL('https://developers.facebook.com/tools/explorer/')
cat("\n Enter Token")
token <- scan(what=character(), nmax=1, quiet = TRUE)
}
test
test()
test <- function(){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
browseURL('https://developers.facebook.com/tools/explorer/')
cat("\n Enter Token")
token <- scan(what=character(), nmax=1, quiet = TRUE)
auth <- c(user, token)
return(auth)
}
test()
fb.auth() <- function(){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
browseURL('https://developers.facebook.com/tools/explorer/')
cat("\n Enter Token")
token <- scan(what=character(), nmax=1, quiet = TRUE)
auth <- c(user, token)
return(auth)
}
fb.auth <- function(){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
browseURL('https://developers.facebook.com/tools/explorer/')
cat("\n Enter Token")
token <- scan(what=character(), nmax=1, quiet = TRUE)
auth <- c(user, token)
return(auth)
}
fb.data <- function(params, req_auth = FALSE){
if(req_auth = TRUE){
auth <- fb.auth()
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?try
fb.data <- function(params, req_auth = FALSE){
try(req_auth = TRUE){
auth <- fb.auth()
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
fb.auth
O2sat=as.numeric(readline("What is the O2 saturation in umole/L?"))
r=function(x) {
deltaO2=meanblank-q[2]
umoleO2=(deltaO2/100)*O2sat
}
umoleO2perL=r(minO2mean)
umolesO2consumed=umoleO2perL*Vial_vol
names(umoleO2consumed)="umoleO2consumed"
O2consumed=data.frame(filenames,umoleO2consumed)
O2consumed
fb.data <- function(params, req_auth = FALSE) {
if(req_auth = TRUE){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
cat("\n Enter Token")
token <- scan(what=character(), nmax=1, quiet = TRUE)
return(auth)
}
user <- auth[1]
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
source("../fb_api.R")
source("../fb_matrix.R")
source("../fb_params.R")
source("../fb_auth.R")
source("../fb_api.R")
source("../fb_matrix.R")
source("../fb_params.R")
source("fb_auth.R")
source('~/.active-rstudio-document')
req_auth = FALSE
if(req_auth = TRUE){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
cat("\n Enter Token")
token <- scan(what=character(), nmax=1, quiet = TRUE)
return(auth)
}
req_auth = FALSE
if(req_auth = TRUE){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
cat("\n Enter Token")
token <- scan(what=character(), nmax=1, quiet = TRUE)
return(auth)
} else{print("It worked!")}
source('~/.active-rstudio-document')
if(req_auth = TRUE){
print("results!")
}
req_auth = FALSE
if(req_auth == TRUE){
print("results!")
}
t <- function(req_auth = FALSE){
if(req_auth == TRUE){
print("results!")
}
}
t
t()
t(req_auth = TRUE)
t <- function(req_auth = FALSE){
if(req_auth == TRUE){
cat("\n Enter Username")
user <- scan(what=character(),nmax=1,quiet=TRUE)
browseURL('https://developers.facebook.com/tools/explorer/')
cat("\n Enter Token")
token <- scan(what=character(), nmax=1, quiet = TRUE)
auth <- c(user, token)
return(auth)
}
}
t()
t(req_auth = T)
t <- function(req_auth = FALSE){
if(req_auth == TRUE){
auth <- fb.auth()
}
}
t(req_auth = T)
auth
auth <- fb.auth()
auth
t <- function(req_auth = FALSE){
if(req_auth == TRUE){
auth <<- fb.auth()
}
}
t(req_auth = T)
auth
rm(auth)
t(req_auth = T)
auth
fb.data <- function(params, req_auth = FALSE) {
if(req_auth == TRUE){
auth <<- fb.auth()
}
user <- auth[1]
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
}
fb.data(params = param_list, req_auth = T)
fb.data <- function(params, req_auth = FALSE) {
if(req_auth == TRUE){
auth <<- fb.auth()
}
user <- auth[1]
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
return(connectStr)
}
fb.data(params = param_list, req_auth = T)
fb.data <- function(params, req_auth = FALSE) {
if(req_auth == TRUE){
auth <<- fb.auth()
# add something to store values
}
user <- auth[1]
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
fb.data(params=param_list, req_auth = TRUE)
param_list
t <- function(store_values = FALSE)
if(req_auth == TRUE){
auth <<- fb.auth()
# add something to store values
if(store_values == TRUE){
save(auth)
}
}
t <- function(store_values = FALSE, req_auth = FALSE)
if(req_auth == TRUE){
auth <<- fb.auth()
# add something to store values
if(store_values == TRUE){
save(auth)
}
}
t(TRUE, TRUE)
t <- function(store_values = FALSE, req_auth = FALSE)
if(req_auth == TRUE){
auth <<- fb.auth()
# add something to store values
if(store_values == TRUE){
save(auth, file = con)
}
}
t(TRUE, TRUE)
rm(auth)
rm(user)
environment()
fb.data <- function(params, req_auth = FALSE) {
if(req_auth == TRUE){
auth <<- fb.auth()
# add something to store values
}
user <- auth[1]
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
fb.data(param_list, TRUE)
auth
fb.data(param_list)
req_auth = TRUE
if(req_auth == TRUE){
auth <<- fb.auth()
}
rm(auth)
rm(token)
fb.data <- function(params, req_auth = FALSE) {
if(req_auth == TRUE){
auth <- fb.auth()
}
user <- auth[1]
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
fb.data(param_list, T)
fb.data <- function(params, req_auth = FALSE, store_auth = FALSE) {
if(req_auth == TRUE){
auth <- fb.auth()
if(store_auth == TRUE){
auth <<- auth
}
}
user <- auth[1]
token <- auth[2]
params <- params(params)
# Create Connection URL
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
fb.data(param_list, FALSE, TRUE)
fb.data(param_list, TRUE, TRUE)
rm(auth)
fb.data(param_list, TRUE, F)
# Accesses graph api and gets data for specified parameters.
fb.data <- function(params, req_auth = FALSE, store_auth = FALSE) {
# prompts for username/id and token
if(req_auth == TRUE){
auth <- fb.auth()
# stores username/id and token
if(store_auth == TRUE){
auth <<- auth
}
}
user <- auth[1]
token <- auth[2]
# Create Connection URL
params <- params(params)
paramStr <- paste(params, "", sep = "&", collapse = "")
connectStr <- paste('https://graph.facebook.com/v2.6/',
user, '/insights?', paramStr, "access_token=",
token, sep = "")
api_con <- URLencode(connectStr)
rd <- readLines(api_con, warn = F)
dat <- rjson::fromJSON(rd)
return(dat$data[[1]]$values)
}
fb.data(param_list, TRUE, TRUE)
